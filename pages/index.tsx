import { ChangeEvent, FormEvent, useRef, useState } from "react";

import Head from "next/head";
import Image from "next/image";
import Range from "@/components/Range";
import Pannel from "@/components/Pannel";
import Button from "@/components/Button";
import InnerBox from "@/components/InnerBox";

import plusIcon from "../assets/icons/plus.svg";
import deletIcon from "../assets/icons/delet.svg";
import reloadIcon from "../assets/icons/reload.svg";
import upploadIcon from "../assets/icons/upload.svg";
import leftArrowIcon from "../assets/icons/leftArrow.svg";
import leftRotateIcon from "../assets/icons/leftRotate.svg";
import rightArrowIcon from "../assets/icons/rightArrow.svg";
import rightRotateIcon from "../assets/icons/rightRotate.svg";

import styles from "./index.module.scss";

export default function Home() {
  const [imagePath, setImagePath] = useState<string>("");
  const [rotateValue, setRotateValue] = useState<number>(0);
  const [inputRotateValue, setInputRotateValue] = useState("0");

  const inputFile = useRef<any>();

  const handlDeletImage = () => setImagePath("");

  const handleClickInputBox = () => {
    inputFile.current.click();
  };

  const handleRotateImage = (event: FormEvent<HTMLInputElement>) => {
    const value = event.currentTarget.value;
    setInputRotateValue(value);
    setRotateValue(Number(value));
  };

  const handleUploadImage = (event: ChangeEvent<HTMLInputElement>) => {
    if (event.target.files && event.target.files[0]) {
      const [file] = event.target.files as any;
      const path = URL.createObjectURL(file);
      setImagePath(path);
    }
  };

  const handleChangeInputValue = (event: FormEvent<HTMLInputElement>) => {
    const { key, keyCode } = event as any;
    const isCheckKey = keyCode >= 48 && keyCode <= 57;
    if (keyCode === 8) {
      setInputRotateValue((prevState) => {
        return prevState.slice(0, prevState.length - 1);
      });
    }
    if (!isCheckKey) return;
    setInputRotateValue((prevState) => prevState.concat(key));
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Upload Image</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.sectionBox}>
        <div className={styles.leftBanner}>
          <div
            className={`${
              imagePath ? styles.chooseBoxForImage : styles.chooseBox
            }`}
          >
            {imagePath ? (
              <div className={styles.uploadInfoContainer}>
                <div className={styles.iconsRow}>
                  <Image src={leftArrowIcon} alt="/image" />
                  <Image src={rightArrowIcon} alt="/image" />
                  <Image src={reloadIcon} alt="/image" />
                  <Image
                    alt="/image"
                    src={deletIcon}
                    onClick={handlDeletImage}
                  />
                </div>
                <div className={styles.imageBox}>
                  <Image
                    alt="/#"
                    width={767}
                    height={430}
                    src={imagePath}
                    className={styles.uploadedImage}
                    style={{
                      transformOrigin: "center",
                      transform: `rotate(${rotateValue}deg)`,
                    }}
                  />
                </div>
              </div>
            ) : (
              <div>
                <p className={styles.leftBannerTitle}>
                  Select an image to rotate
                </p>
                <div className={styles.inputBox} onClick={handleClickInputBox}>
                  <Image src={upploadIcon} alt="/#" />
                  <p className={styles.uploadText}>
                    Upload an image or drop it here.
                  </p>
                  <Button
                    label="Upload Image"
                    iconSource={plusIcon}
                    onClickButton={() => {}}
                  />
                  <input
                    type="file"
                    ref={inputFile}
                    className={styles.file}
                    onChange={handleUploadImage}
                  />
                </div>
              </div>
            )}
          </div>
        </div>
        <Pannel pannelTitle="Format settings">
          <div className={styles.pannelContainer}>
            <h4 className={styles.settingsSubtitle}>Rotate</h4>
            <div className={styles.innerBoxRow}>
              <InnerBox
                onClickInnerBox={() => {
                  setRotateValue((prevstate) => prevstate - 90);
                }}
              >
                <Image src={leftRotateIcon} alt="/image" />
                <p>90° Left</p>
              </InnerBox>
              <InnerBox
                onClickInnerBox={() => {
                  setRotateValue((prevstate) => prevstate + 90);
                }}
              >
                <Image src={rightRotateIcon} alt="/image" />
                <p>90° Right</p>
              </InnerBox>
            </div>
            <div className={styles.secondBoxRow}>
              <h4 className={styles.settingsSubtitle}>Custom angle (°) 0</h4>
              <div className={styles.innerBoxRow}>
                <InnerBox innerBoxStyle={styles.innerBoxStyle}>
                  <input
                    type="text"
                    onKeyUp={handleChangeInputValue}
                    defaultValue={inputRotateValue}
                  />
                </InnerBox>
                <Range maxValue={360} onChange={handleRotateImage} />
              </div>
            </div>
          </div>
        </Pannel>
      </div>
    </div>
  );
}
